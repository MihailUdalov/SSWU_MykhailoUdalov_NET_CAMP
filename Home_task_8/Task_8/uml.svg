<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1612px" height="1042px" viewBox="-0.5 -0.5 1612 1042" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2023-05-15T16:26:15.142Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot; etag=&quot;E1xJCCPXuodgqBVeF6rU&quot; version=&quot;21.3.2&quot; type=&quot;device&quot;&gt;&#10;  &lt;diagram name=&quot;Page-1&quot; id=&quot;Qs_2nJS1f51r6cSboJnc&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;3056&quot; dy=&quot;1225&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;850&quot; pageHeight=&quot;1100&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-2&quot; value=&quot;Road&amp;lt;br&amp;gt;&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;50&quot; y=&quot;170&quot; width=&quot;280&quot; height=&quot;300&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-3&quot; value=&quot;- Name:string&amp;lt;br&amp;gt;- Lines:List&amp;amp;lt;Line&amp;amp;gt;&amp;lt;br&amp;gt;- TrafficLight:TrafficLight&amp;amp;nbsp;&amp;lt;br&amp;gt;&amp;amp;nbsp;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-2&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;280&quot; height=&quot;54&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-4&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-2&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;80&quot; width=&quot;280&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-5&quot; value=&quot;+ Road(string name, TrafficLight trafficLight, int countLines)&amp;lt;br&amp;gt;-&amp;amp;nbsp; InitLine(int Count):void&amp;lt;br&amp;gt;- Line_LineChanged(Line obj):void&amp;lt;br&amp;gt;- TrafficLight_StateChanged(TrafficLight obj):void&amp;lt;br&amp;gt;+ Start(TrafficLightState trafficLightState = TrafficLightState.Red):void&amp;lt;br&amp;gt;+ Stop():void&amp;lt;br&amp;gt;+ AssignTrafficLight(int currentLine, TrafficLight trafficLight):void&amp;lt;br&amp;gt;+ ToString():string&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-2&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;88&quot; width=&quot;280&quot; height=&quot;212&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-6&quot; value=&quot;CrossRoadManager&amp;lt;br&amp;gt;&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-470&quot; y=&quot;280&quot; width=&quot;450&quot; height=&quot;170&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-7&quot; value=&quot;&amp;lt;div&amp;gt;- schemeCrossRoads:List&amp;amp;lt;ISchemeCrossRoads&amp;amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-6&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;450&quot; height=&quot;34&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-8&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-6&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;60&quot; width=&quot;450&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-9&quot; value=&quot;+ CrossRoadManager(List&amp;amp;lt;ISchemeCrossRoads&amp;amp;gt; schemeCrossRoads)&amp;lt;br&amp;gt;+ CrossRoadManager(ISchemeCrossRoads schemeCrossRoads)&amp;lt;br&amp;gt;+AddScheme(ISchemeCrossRoads schemeCrossRoads):void&amp;amp;nbsp;&amp;lt;br&amp;gt;+Work(): void&amp;lt;br&amp;gt;+ Stop():void&amp;lt;br&amp;gt;+ ToString():string&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-6&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;68&quot; width=&quot;450&quot; height=&quot;102&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-11&quot; value=&quot;ISchemeCrossRoads&amp;lt;br&amp;gt;&amp;amp;lt;interface&amp;amp;gt;&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=56;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-780&quot; y=&quot;566&quot; width=&quot;170&quot; height=&quot;140&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-13&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-11&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;56&quot; width=&quot;170&quot; height=&quot;24&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-14&quot; value=&quot;+ Start():void&amp;lt;br&amp;gt;+Stop():void&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-11&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;80&quot; width=&quot;170&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-15&quot; value=&quot;Line&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;100&quot; y=&quot;593&quot; width=&quot;230&quot; height=&quot;240&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-16&quot; value=&quot;- Name:string&amp;lt;br&amp;gt;- TrafficLight:TrafficLight&amp;amp;nbsp;&amp;lt;br&amp;gt;- Width: double&amp;lt;br&amp;gt;+ &amp;amp;lt;event Action&amp;amp;lt;Line&amp;amp;gt;&amp;amp;gt; LineChanged;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-15&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;230&quot; height=&quot;74&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-17&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-15&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;100&quot; width=&quot;230&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-18&quot; value=&quot;+ Line(string name, TrafficLight trafficLight = null, double width = 2.5d)&amp;lt;br&amp;gt;-TrafficLight_StateChanged(TrafficLight obj):void&amp;amp;nbsp;&amp;lt;br&amp;gt;+ Start():void&amp;lt;br&amp;gt;+ Stop():void&amp;lt;br&amp;gt;+ ToString():string&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-15&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;108&quot; width=&quot;230&quot; height=&quot;132&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-19&quot; value=&quot;ParallelCrossRoad&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-395&quot; y=&quot;566&quot; width=&quot;300&quot; height=&quot;240&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-20&quot; value=&quot;&amp;lt;div&amp;gt;- name:string: Road&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;- northSouth: Road&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- southNorth: Road&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- eastWest Road&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- westEastRoad&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-19&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;300&quot; height=&quot;84&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-21&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-19&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;110&quot; width=&quot;300&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-22&quot; value=&quot;+ ParallelCrossRoad(string name, Road northSouth, Road southNorth, Road eastWest, Road westEast)&amp;lt;br&amp;gt;+ Start():void&amp;lt;br&amp;gt;+ Stop():void&amp;lt;br&amp;gt;+ AddTrafficLightInLine(string roadName, int line, TrafficLight trafficLight): void&amp;lt;br&amp;gt;+ToString(): string&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-19&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;118&quot; width=&quot;300&quot; height=&quot;122&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-23&quot; value=&quot;Simulator&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-370&quot; y=&quot;10&quot; width=&quot;250&quot; height=&quot;188&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-24&quot; value=&quot;-&amp;amp;lt;static&amp;amp;gt; simulator:Simulator&amp;lt;br&amp;gt;-crossRoadManager:CrossRoadManager&amp;lt;br&amp;gt;-parallelCross:ParallelCrossRoad&amp;amp;nbsp;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-23&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;250&quot; height=&quot;54&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-25&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-23&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;80&quot; width=&quot;250&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-26&quot; value=&quot;- Simulator()&amp;lt;br&amp;gt;- InitParallelCrossRoad():void&amp;amp;nbsp;&amp;lt;br&amp;gt;+ Start():void&amp;amp;nbsp;&amp;lt;br&amp;gt;+ &amp;amp;lt;static&amp;amp;gt; GetSimulator():Simulator&amp;amp;nbsp;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-23&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;88&quot; width=&quot;250&quot; height=&quot;100&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-27&quot; value=&quot;TrafficLight&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;500&quot; y=&quot;322&quot; width=&quot;330&quot; height=&quot;368&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-28&quot; value=&quot;&amp;lt;div&amp;gt;# currentState :TrafficLightState&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;# previousState:TrafficLightState&amp;amp;nbsp;&amp;amp;nbsp;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;# timer: Timer&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;# intervalForRedState: int&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;# intervalForYellowState: int&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;# intervalForGreenState: int&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+&amp;amp;nbsp; StateChanged:event Action&amp;amp;lt;TrafficLight&amp;amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-27&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;330&quot; height=&quot;154&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-29&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-27&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;180&quot; width=&quot;330&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-30&quot; value=&quot;+ TrafficLight(int intervalForRedState = 5000, int intervalForYellowState = 2500, int intervalForGreenState = 5000)&amp;lt;br&amp;gt;+ &amp;amp;lt;virtual&amp;amp;gt; Start(TrafficLightState startState = TrafficLightState.Red): void&amp;lt;br&amp;gt;+ &amp;amp;lt;virtual&amp;amp;gt; Stop():void&amp;amp;nbsp;&amp;lt;br&amp;gt;# OnStateChanged():void&amp;lt;br&amp;gt;+ ChangeState(object sender, ElapsedEventArgs e):void&amp;lt;br&amp;gt;+ ToString():string&amp;amp;nbsp;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-27&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;188&quot; width=&quot;330&quot; height=&quot;180&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-31&quot; value=&quot;TrafficLightWithTurn&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;525&quot; y=&quot;790&quot; width=&quot;280&quot; height=&quot;258&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-32&quot; value=&quot;&amp;lt;div&amp;gt;+ currentTurnState:TrafficLightState&amp;amp;nbsp;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;-intervalForRedTurnState: int&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;-intervalForGreenTurnState: int&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;-turnTimer:Timer&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-31&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;280&quot; height=&quot;64&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-33&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-31&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;90&quot; width=&quot;280&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-34&quot; value=&quot;+ TrafficLightWithTurn(int intervalForRedTurnState = 5000, int intervalForGreenTurnState = 5000) : base()&amp;lt;br&amp;gt;+ Start(TrafficLightState startState = TrafficLightState.Red):void&amp;lt;br&amp;gt;+ Stop():void&amp;lt;br&amp;gt;+ ChangeTurnState(object sender, ElapsedEventArgs e):void&amp;lt;br&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;GvqU-BxOqDRdRS-n0hCH-31&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;98&quot; width=&quot;280&quot; height=&quot;160&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-43&quot; value=&quot;&quot; style=&quot;endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;exitX=0;exitY=1;exitDx=0;exitDy=0;exitPerimeter=0;&quot; parent=&quot;1&quot; source=&quot;GvqU-BxOqDRdRS-n0hCH-20&quot; target=&quot;GvqU-BxOqDRdRS-n0hCH-11&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;80&quot; y=&quot;520&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;50&quot; y=&quot;362&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-44&quot; value=&quot;&quot; style=&quot;endArrow=block;endSize=16;endFill=0;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; source=&quot;GvqU-BxOqDRdRS-n0hCH-31&quot; target=&quot;GvqU-BxOqDRdRS-n0hCH-27&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;710&quot; y=&quot;570&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;870&quot; y=&quot;570&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-59&quot; value=&quot;&quot; style=&quot;endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;&quot; parent=&quot;1&quot; source=&quot;GvqU-BxOqDRdRS-n0hCH-6&quot; target=&quot;GvqU-BxOqDRdRS-n0hCH-19&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.7407&quot; y=&quot;65&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;210&quot; y=&quot;270&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;370&quot; y=&quot;270&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-61&quot; value=&quot;&quot; style=&quot;endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;&quot; parent=&quot;1&quot; source=&quot;GvqU-BxOqDRdRS-n0hCH-19&quot; target=&quot;GvqU-BxOqDRdRS-n0hCH-2&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;0.403&quot; y=&quot;20&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;500&quot; y=&quot;410&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;660&quot; y=&quot;410&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-20&quot; y=&quot;17&quot; as=&quot;offset&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;80&quot; y=&quot;686&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-62&quot; value=&quot;1&quot; style=&quot;endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;&quot; parent=&quot;1&quot; source=&quot;GvqU-BxOqDRdRS-n0hCH-2&quot; target=&quot;GvqU-BxOqDRdRS-n0hCH-15&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-1&quot; y=&quot;3&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;370&quot; y=&quot;422.5&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;450&quot; y=&quot;423&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;215&quot; y=&quot;440&quot; /&gt;&#10;              &lt;mxPoint x=&quot;215&quot; y=&quot;440&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-63&quot; value=&quot;&quot; style=&quot;endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;&quot; parent=&quot;1&quot; source=&quot;GvqU-BxOqDRdRS-n0hCH-15&quot; target=&quot;GvqU-BxOqDRdRS-n0hCH-27&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.878&quot; y=&quot;60&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;380&quot; y=&quot;432.5&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;460&quot; y=&quot;433&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;190&quot; y=&quot;740&quot; /&gt;&#10;              &lt;mxPoint x=&quot;530&quot; y=&quot;740&quot; /&gt;&#10;            &lt;/Array&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-64&quot; value=&quot;&quot; style=&quot;endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;&quot; parent=&quot;1&quot; source=&quot;GvqU-BxOqDRdRS-n0hCH-2&quot; target=&quot;GvqU-BxOqDRdRS-n0hCH-27&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.3077&quot; y=&quot;99&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;390&quot; y=&quot;442.5&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;470&quot; y=&quot;443&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-64&quot; y=&quot;-93&quot; as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GvqU-BxOqDRdRS-n0hCH-65&quot; value=&quot;&quot; style=&quot;endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;&quot; parent=&quot;1&quot; source=&quot;GvqU-BxOqDRdRS-n0hCH-6&quot; target=&quot;GvqU-BxOqDRdRS-n0hCH-23&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.0476&quot; y=&quot;-145&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;400&quot; y=&quot;452.5&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;480&quot; y=&quot;453&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;EE4O2bPl8Eep7Ar-mc82-5&quot; value=&quot;TrafficLightState&amp;lt;br&amp;gt;&amp;amp;lt;Enum&amp;amp;gt;&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;570&quot; y=&quot;90&quot; width=&quot;200&quot; height=&quot;120&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;EE4O2bPl8Eep7Ar-mc82-6&quot; value=&quot;&amp;lt;div&amp;gt;Green,&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp;Yellow,&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;amp;nbsp;Red&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;EE4O2bPl8Eep7Ar-mc82-5&quot;&gt;&#10;          &lt;mxGeometry y=&quot;50&quot; width=&quot;200&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;EE4O2bPl8Eep7Ar-mc82-9&quot; value=&quot;&quot; style=&quot;endArrow=open;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;EE4O2bPl8Eep7Ar-mc82-5&quot; target=&quot;GvqU-BxOqDRdRS-n0hCH-27&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-0.3077&quot; y=&quot;99&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;340&quot; y=&quot;330&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;510&quot; y=&quot;516&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;-64&quot; y=&quot;-93&quot; as=&quot;offset&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;665&quot; y=&quot;240&quot; /&gt;&#10;              &lt;mxPoint x=&quot;665&quot; y=&quot;240&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;&lt;/mxfile&gt;&#10;"><defs/><g><path d="M 830 186 L 830 160 L 1110 160 L 1110 186" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 830 186 L 830 460 L 1110 460 L 1110 186" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 830 186 L 1110 186" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 278px; height: 1px; padding-top: 167px; margin-left: 831px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; overflow-wrap: normal;">Road<br /></div></div></div></foreignObject><text x="970" y="179" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">Road&#xa;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 270px; height: 1px; padding-top: 193px; margin-left: 836px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 50px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">- Name:string<br />- Lines:List&lt;Line&gt;<br />- TrafficLight:TrafficLight <br /> </div></div></div></foreignObject><text x="836" y="205" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">- Name:string...</text></switch></g><path d="M 830 244 L 1110 244" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 270px; height: 1px; padding-top: 255px; margin-left: 836px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 208px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+ Road(string name, TrafficLight trafficLight, int countLines)<br />-  InitLine(int Count):void<br />- Line_LineChanged(Line obj):void<br />- TrafficLight_StateChanged(TrafficLight obj):void<br />+ Start(TrafficLightState trafficLightState = TrafficLightState.Red):void<br />+ Stop():void<br />+ AssignTrafficLight(int currentLine, TrafficLight trafficLight):void<br />+ ToString():string<br /><br /><br /></div></div></div></foreignObject><text x="836" y="267" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">+ Road(string name, TrafficLight trafficLight...</text></switch></g><path d="M 310 296 L 310 270 L 760 270 L 760 296" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 310 296 L 310 440 L 760 440 L 760 296" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 310 296 L 760 296" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 448px; height: 1px; padding-top: 277px; margin-left: 311px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; overflow-wrap: normal;">CrossRoadManager<br /></div></div></div></foreignObject><text x="535" y="289" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">CrossRoadManager&#xa;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 440px; height: 1px; padding-top: 303px; margin-left: 316px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 30px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><div>- schemeCrossRoads:List&lt;ISchemeCrossRoads&gt;</div></div></div></div></foreignObject><text x="316" y="315" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">- schemeCrossRoads:List&lt;ISchemeCrossRoads&gt;</text></switch></g><path d="M 310 334 L 760 334" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 440px; height: 1px; padding-top: 345px; margin-left: 316px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 98px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+ CrossRoadManager(List&lt;ISchemeCrossRoads&gt; schemeCrossRoads)<br />+ CrossRoadManager(ISchemeCrossRoads schemeCrossRoads)<br />+AddScheme(ISchemeCrossRoads schemeCrossRoads):void <br />+Work(): void<br />+ Stop():void<br />+ ToString():string</div></div></div></foreignObject><text x="316" y="357" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">+ CrossRoadManager(List&lt;ISchemeCrossRoads&gt; schemeCrossRoads)...</text></switch></g><path d="M 0 612 L 0 556 L 170 556 L 170 612" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 612 L 0 696 L 170 696 L 170 612" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 612 L 170 612" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 168px; height: 1px; padding-top: 563px; margin-left: 1px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; overflow-wrap: normal;">ISchemeCrossRoads<br />&lt;interface&gt;</div></div></div></foreignObject><text x="85" y="575" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">ISchemeCrossRoads...</text></switch></g><path d="M 0 624 L 170 624" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 160px; height: 1px; padding-top: 643px; margin-left: 6px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 56px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+ Start():void<br />+Stop():void</div></div></div></foreignObject><text x="6" y="655" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">+ Start():void...</text></switch></g><path d="M 880 609 L 880 583 L 1110 583 L 1110 609" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 880 609 L 880 823 L 1110 823 L 1110 609" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 880 609 L 1110 609" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 228px; height: 1px; padding-top: 590px; margin-left: 881px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; overflow-wrap: normal;">Line</div></div></div></foreignObject><text x="995" y="602" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">Line</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 220px; height: 1px; padding-top: 616px; margin-left: 886px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 70px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">- Name:string<br />- TrafficLight:TrafficLight <br />- Width: double<br />+ &lt;event Action&lt;Line&gt;&gt; LineChanged;</div></div></div></foreignObject><text x="886" y="628" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">- Name:string...</text></switch></g><path d="M 880 687 L 1110 687" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 220px; height: 1px; padding-top: 698px; margin-left: 886px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 128px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+ Line(string name, TrafficLight trafficLight = null, double width = 2.5d)<br />-TrafficLight_StateChanged(TrafficLight obj):void <br />+ Start():void<br />+ Stop():void<br />+ ToString():string</div></div></div></foreignObject><text x="886" y="710" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">+ Line(string name, TrafficLight traf...</text></switch></g><path d="M 385 582 L 385 556 L 685 556 L 685 582" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 385 582 L 385 796 L 685 796 L 685 582" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 385 582 L 685 582" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 298px; height: 1px; padding-top: 563px; margin-left: 386px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; overflow-wrap: normal;">ParallelCrossRoad</div></div></div></foreignObject><text x="535" y="575" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">ParallelCrossRoad</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 290px; height: 1px; padding-top: 589px; margin-left: 391px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 80px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><div>- name:string: Road</div><div><span style="background-color: initial;">- northSouth: Road</span></div><div>- southNorth: Road</div><div>- eastWest Road</div><div>- westEastRoad</div></div></div></div></foreignObject><text x="391" y="601" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">- name:string: Road...</text></switch></g><path d="M 385 670 L 685 670" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 290px; height: 1px; padding-top: 681px; margin-left: 391px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 118px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+ ParallelCrossRoad(string name, Road northSouth, Road southNorth, Road eastWest, Road westEast)<br />+ Start():void<br />+ Stop():void<br />+ AddTrafficLightInLine(string roadName, int line, TrafficLight trafficLight): void<br />+ToString(): string</div></div></div></foreignObject><text x="391" y="693" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">+ ParallelCrossRoad(string name, Road northSouth...</text></switch></g><path d="M 410 26 L 410 0 L 660 0 L 660 26" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 410 26 L 410 188 L 660 188 L 660 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 410 26 L 660 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 248px; height: 1px; padding-top: 7px; margin-left: 411px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; overflow-wrap: normal;">Simulator</div></div></div></foreignObject><text x="535" y="19" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">Simulator</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 240px; height: 1px; padding-top: 33px; margin-left: 416px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 50px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">-&lt;static&gt; simulator:Simulator<br />-crossRoadManager:CrossRoadManager<br />-parallelCross:ParallelCrossRoad </div></div></div></foreignObject><text x="416" y="45" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">-&lt;static&gt; simulator:Simulator...</text></switch></g><path d="M 410 84 L 660 84" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 240px; height: 1px; padding-top: 95px; margin-left: 416px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 96px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">- Simulator()<br />- InitParallelCrossRoad():void <br />+ Start():void <br />+ &lt;static&gt; GetSimulator():Simulator </div></div></div></foreignObject><text x="416" y="107" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">- Simulator()...</text></switch></g><path d="M 1280 338 L 1280 312 L 1610 312 L 1610 338" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1280 338 L 1280 680 L 1610 680 L 1610 338" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1280 338 L 1610 338" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 328px; height: 1px; padding-top: 319px; margin-left: 1281px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; overflow-wrap: normal;">TrafficLight</div></div></div></foreignObject><text x="1445" y="331" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">TrafficLight</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 320px; height: 1px; padding-top: 345px; margin-left: 1286px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 150px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><div># currentState :TrafficLightState</div><div># previousState:TrafficLightState  </div><div><span style="background-color: initial;"># timer: Timer</span></div><div><br /></div><div># intervalForRedState: int</div><div># intervalForYellowState: int</div><div># intervalForGreenState: int</div><div><br /></div><div>+  StateChanged:event Action&lt;TrafficLight&gt;</div></div></div></div></foreignObject><text x="1286" y="357" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px"># currentState :TrafficLightState...</text></switch></g><path d="M 1280 496 L 1610 496" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 320px; height: 1px; padding-top: 507px; margin-left: 1286px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 176px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+ TrafficLight(int intervalForRedState = 5000, int intervalForYellowState = 2500, int intervalForGreenState = 5000)<br />+ &lt;virtual&gt; Start(TrafficLightState startState = TrafficLightState.Red): void<br />+ &lt;virtual&gt; Stop():void <br /># OnStateChanged():void<br />+ ChangeState(object sender, ElapsedEventArgs e):void<br />+ ToString():string <br /><br /></div></div></div></foreignObject><text x="1286" y="519" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">+ TrafficLight(int intervalForRedState = 5000, int in...</text></switch></g><path d="M 1305 806 L 1305 780 L 1585 780 L 1585 806" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1305 806 L 1305 1038 L 1585 1038 L 1585 806" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1305 806 L 1585 806" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 278px; height: 1px; padding-top: 787px; margin-left: 1306px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; overflow-wrap: normal;">TrafficLightWithTurn</div></div></div></foreignObject><text x="1445" y="799" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">TrafficLightWithTurn</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 270px; height: 1px; padding-top: 813px; margin-left: 1311px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 60px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><div>+ currentTurnState:TrafficLightState </div><div><span style="background-color: initial;">-intervalForRedTurnState: int</span><br /></div><div>-intervalForGreenTurnState: int</div><div><span style="background-color: initial;">-turnTimer:Timer</span><br /></div></div></div></div></foreignObject><text x="1311" y="825" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">+ currentTurnState:TrafficLightState...</text></switch></g><path d="M 1305 874 L 1585 874" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 270px; height: 1px; padding-top: 885px; margin-left: 1311px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 156px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+ TrafficLightWithTurn(int intervalForRedTurnState = 5000, int intervalForGreenTurnState = 5000) : base()<br />+ Start(TrafficLightState startState = TrafficLightState.Red):void<br />+ Stop():void<br />+ ChangeTurnState(object sender, ElapsedEventArgs e):void<br /></div></div></div></foreignObject><text x="1311" y="897" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">+ TrafficLightWithTurn(int intervalForRedTurn...</text></switch></g><path d="M 385 666 L 183.99 639.2" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 171.11 637.48 L 184.85 632.76 L 183.14 645.64 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1445 780 L 1445 698.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1445 681.12 L 1453.5 698.12 L 1436.5 698.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 535 455.99 L 535 553.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 535 440.99 L 539.41 448.49 L 535 455.99 L 530.59 448.49 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 528.5 541.88 L 535 554.88 L 541.5 541.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 700.99 676.08 L 860 676.08 L 860 462.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 685.99 676.08 L 693.49 671.67 L 700.99 676.08 L 693.49 680.49 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 866.5 474.12 L 860 461.12 L 853.5 474.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 970 475.99 L 970 580.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 970 460.99 L 974.41 468.49 L 970 475.99 L 965.59 468.49 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 963.5 568.88 L 970 581.88 L 976.5 568.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 457px; margin-left: 975px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; background-color: rgb(255, 255, 255); white-space: nowrap;">1</div></div></div></foreignObject><text x="975" y="457" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px">1</text></switch></g><path d="M 1125.99 730.08 L 1310 730.08 L 1310 682.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1110.99 730.08 L 1118.49 725.67 L 1125.99 730.08 L 1118.49 734.49 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1316.5 694.12 L 1310 681.12 L 1303.5 694.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1125.99 310.08 L 1195.08 310.08 L 1195.08 496.08 L 1277.76 496.08" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1110.99 310.08 L 1118.49 305.67 L 1125.99 310.08 L 1118.49 314.49 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1265.88 502.58 L 1278.88 496.08 L 1265.88 489.58" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 535 254.01 L 535 190.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 535 269.01 L 530.59 261.51 L 535 254.01 L 539.41 261.51 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 541.5 202.12 L 535 189.12 L 528.5 202.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1350 130 L 1350 80 L 1550 80 L 1550 130" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1350 130 L 1350 200 L 1550 200 L 1550 130" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1350 130 L 1550 130" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 87px; margin-left: 1351px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; font-weight: bold; white-space: normal; overflow-wrap: normal;">TrafficLightState<br />&lt;Enum&gt;</div></div></div></foreignObject><text x="1450" y="99" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">TrafficLightState...</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 190px; height: 1px; padding-top: 137px; margin-left: 1356px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 66px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><div>Green,</div><div> Yellow,</div><div> Red</div></div></div></div></foreignObject><text x="1356" y="149" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Green,...</text></switch></g><path d="M 1445.08 215.99 L 1445.08 230.08 L 1445.08 309.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1445.08 200.99 L 1449.49 208.49 L 1445.08 215.99 L 1440.67 208.49 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1438.58 297.88 L 1445.08 310.88 L 1451.58 297.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>